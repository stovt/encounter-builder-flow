{"version":3,"sources":["shared/components/forms/Button.styled.js","shared/components/forms/Select.styled.js","shared/components/forms/Input.styled.js","shared/components/forms/index.js","pages/EncounterBattle/EncounterBattle.actions.js","shared/components/Title/Title.styled.js","shared/components/Title/index.js","../node_modules/uuid/v4.js","../node_modules/uuid/lib/rng-browser.js","../node_modules/uuid/lib/bytesToUuid.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","pages/EncounterBattle/EncounterBattle.reducer.js","pages/EncounterBattle/EncounterBattle.helpers.js","pages/EncounterBuilder/EncounterBuilder.constants.js","pages/EncounterBuilder/EncounterBuilder.reducer.js","shared/components/BreakpointListener/BreakpointListener.selectors.js","shared/HOC/withBreakpoints.js","shared/HOC/withSaga.js","pages/EncounterBuilder/EncounterBuilder.sagas.js","pages/EncounterBuilder/GroupInfo/Party/Select/Select.component.js","pages/EncounterBuilder/GroupInfo/Party/RemovePartyLevelButton/RemovePartyLevelButton.styled.js","pages/EncounterBuilder/GroupInfo/Party/RemovePartyLevelButton/RemovePartyLevelButton.component.js","pages/EncounterBuilder/GroupInfo/Party/AddPartyLevelButton/AddPartyLevelButton.styled.js","pages/EncounterBuilder/GroupInfo/Party/AddPartyLevelButton/AddPartyLevelButton.component.js","pages/EncounterBuilder/GroupInfo/Party/Party.styled.js","pages/EncounterBuilder/GroupInfo/Party/Party.component.js","pages/EncounterBuilder/GroupInfo/Party/Party.constants.js","pages/EncounterBuilder/EncounterBuilder.helpers.js","pages/EncounterBuilder/GroupInfo/TotalPartyLevels/TotalPartyLevels.constants.js","pages/EncounterBuilder/GroupInfo/TotalPartyLevels/TotalPartyLevelItem/TotalPartyLevelItem.styled.js","pages/EncounterBuilder/GroupInfo/TotalPartyLevels/TotalPartyLevels.styled.js","pages/EncounterBuilder/GroupInfo/TotalPartyLevels/TotalPartyLevels.component.js","pages/EncounterBuilder/GroupInfo/GroupInfo.styled.js","pages/EncounterBuilder/GroupInfo/GroupInfo.component.js","pages/EncounterBuilder/GroupInfo/GroupInfo.container.js","pages/EncounterBuilder/EncounterInfo/GroupInfo/MonsterName/MonsterName.styled.js","pages/EncounterBuilder/EncounterInfo/GroupInfo/MonsterDescription/MonsterDescription.styled.js","pages/EncounterBuilder/EncounterInfo/GroupInfo/MonsterDescription/MonsterDescription.component.js","pages/EncounterBuilder/EncounterInfo/GroupInfo/GroupInfo.styled.js","pages/EncounterBuilder/EncounterInfo/GroupInfo/Input/Wrapper/Wrapper.styled.js","pages/EncounterBuilder/EncounterInfo/GroupInfo/Input/Button/Button.styled.js","pages/EncounterBuilder/EncounterInfo/GroupInfo/Input/Input.styled.js","pages/EncounterBuilder/EncounterInfo/GroupInfo/Input/Input.component.js","pages/EncounterBuilder/EncounterInfo/GroupInfo/Input/Input.container.js","pages/EncounterBuilder/EncounterInfo/GroupInfo/GroupInfo.component.js","pages/EncounterBuilder/EncounterInfo/EncounterInfo.component.js","pages/EncounterBuilder/EncounterInfo/EncounterInfo.container.js","pages/EncounterBuilder/Totals/Title/Title.styled.js","pages/EncounterBuilder/Totals/SubTitle/SubTitle.styled.js","pages/EncounterBuilder/Totals/Totals.styled.js","pages/EncounterBuilder/Totals/Totals.component.js","pages/EncounterBuilder/Legend/LegendItem/LegentItem.styled.js","pages/EncounterBuilder/Legend/Legend.styled.js","pages/EncounterBuilder/Legend/Legend.constants.js","pages/EncounterBuilder/Legend/Legend.component.js","pages/EncounterBuilder/MonstersTable/AddMonsterButton/AddMonsterButton.component.js","pages/EncounterBuilder/MonstersTable/AddMonsterButton/AddMonsterButton.container.js","pages/EncounterBuilder/MonstersTable/MonstersTable.constants.js","pages/EncounterBuilder/MonstersTable/CRFilter/CRFilter.component.js","pages/EncounterBuilder/MonstersTable/SizeFilter/SizeFilter.component.js","pages/EncounterBuilder/MonstersTable/TypeFilter/TypeFilter.component.js","pages/EncounterBuilder/MonstersTable/MonstersTable.helpers.js","pages/EncounterBuilder/MonstersTable/MonstersTable.component.js","pages/EncounterBuilder/MonstersTable/MonstersTable.container.js","pages/EncounterBuilder/BattleButton/Wrapper/Wrapper.styled.js","pages/EncounterBuilder/BattleButton/BattleButton.styled.js","pages/EncounterBuilder/BattleButton/BattleButton.component.js","pages/EncounterBuilder/BattleButton/BattleButton.container.js","pages/EncounterBuilder/EncounterBuilder.component.js","pages/EncounterBuilder/EncounterBuilder.container.js","pages/EncounterBuilder/index.js","../node_modules/react-router-dom/esm/react-router-dom.js"],"names":["bigBtnStyles","css","_templateObject","styled","button","_templateObject2","props","theme","paddings","small","colors","btn","shadow","concat","prime1","prime2","white","select","Select_styled_templateObject","input","border","focusBorder","focusShadow","Input_styled_templateObject","__webpack_require__","d","__webpack_exports__","Button_styled","Select_styled","Input_styled","ADD_MONSTER_TO_BATTLE_TABLE","SET_MONSTER_HP","SET_MONSTER_STATE","NEXT_TURN","addMonsterToBattleTable","setMonsterHP","setMonsterState","nextTurn","monster","type","rowID","hp","state","centerStyles","h2","margins","medium","fontSize","title","center","Title_styled","rng","bytesToUuid","module","exports","options","buf","offset","i","Array","rnds","random","ii","getRandomValues","crypto","bind","msCrypto","window","rnds8","Uint8Array","r","Math","byteToHex","toString","substr","bth","join","_toConsumableArray","arr","isArray","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","call","from","_iterableToArray","TypeError","_nonIterableSpread","modifyMonsterData","v4","objectSpread","initiative","dex","dexterity","floor","initialState","monsters","turn","battleStarted","encounterBattleReducer","arguments","undefined","action","newMonstersState","sort","a","b","newTurn","findIndex","SET_MONSTER_QTY","qty","filter","data","id","slice","monsterData","find","m","hit_points","monsterState","DEFAULT_PARTY_LEVELS","level","PLAYER_LEVELS","playerCount","NEW_PARTY_LEVEL","loadedMonsters","monsterLoading","monsterError","loading","error","partyLevels","groups","encounterBuilderReducer","FETCH_ALL_MONSTERS","FETCH_ALL_MONSTERS_SUCCESS","FETCH_ALL_MONSTERS_ERROR","FETCH_MONSTER_BY_ID","ADD_MONSTER_TO_GROUP","FETCH_MONSTER_BY_ID_SUCCESS","FETCH_MONSTER_BY_ID_ERROR","ADD_PARTY_LEVEL","REMOVE_PARTY_LEVEL","p","SET_PARTY_LEVEL","value","SET_PARTY_PLAYER_COUNT","ADD_MONSTER_TO_GROUP_SUCCESS","monsterID","monsterIndexInGroup","g","getBreakpoints","breakpoints","mapStateToProps","withSaga","sagas","WrappedComponent","_Component","_class","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","sagaMiddleware","run","cancel","react_default","createElement","Component","getMonsters","getMonsterByID","handleAddMonsterToGroup","fetchAllMonsters","fetch","then","res","json","regenerator_default","wrap","_context","prev","next","sent","put","fetchAllMonstersSuccess","map","_ref","slug","objectWithoutProperties","startsWith","t0","fetchAllMonstersError","message","response","statusText","stop","_marked","fetchMonsterByID","_ref2","reqMonster","_context2","fetchMonsterByIDSuccess","fetchMonsterByIDError","_marked2","_ref3","newMonster","_context3","addMonsterToGroupSuccess","_marked3","_callee","_context4","takeEvery","_marked4","Select","handleOnChange","target","_this$props","_this","onChange","Number","_this$props2","maxValue","arraySequence","val","index","components_forms","React","PureComponent","RemovePartyLevelButton","handleOnClick","removePartyLevel","RemovePartyLevelButton_styled","onClick","Icons","StyledButton","AddPartyLevelButton_styled_templateObject","AddPartyLevelButton","AddPartyLevelButton_styled","assign","size","index_es","StyledPartyWrapper","div","Party_styled_templateObject","StyledParty","StyledPartyItem","_templateObject3","Party","setPartyPlayerCount","setPartyLevel","addPartyLevel","Fragment","partyLevel","Select_component","RemovePartyLevelButton_component","AddPartyLevelButton_component","getTotalPartyExpLevels","reduce","accum","curLevel","curExpLevels","easy","hard","deadly","budget","getTotalExp","acc","group","CR_INFO","challenge_rating","exp","getTotalPlayerCount","pl","getAdjustedExp","getTotalQty","multiplier","monsterCount","multiplierCategory","getMultiplier","getDifficulty","levels","PARTY_LEVEL_TYPES","li","TotalPartyLevelItem_styled_templateObject","bold","ul","TotalPartyLevels_styled_templateObject","TotalPartyLevels","totalPartyExpLevels","difficulty","TotalPartyLevels_styled","TotalPartyLevelItem_styled","values","numberWithCommas","GroupInfo_styled_templateObject","GroupInfo","GroupInfo_styled","Title","Party_component","TotalPartyLevels_component","connect","getPartyLevels","getGroups","dispatch","MonsterName_styled_templateObject","MonsterDescription_styled_templateObject","MonsterDescription","cr","xp","MonsterDescription_styled","GroupInfo_GroupInfo_styled_templateObject","large","Wrapper_styled_templateObject","leftBtnStyles","Button_styled_templateObject","rightBtnStyles","Button_styled_templateObject2","IconWrapper","Button_styled_templateObject3","IconUtils","colorOverrideCss","left","right","Input","handleOnClickMinus","getMonsterById","setMonsterQTY","handleOnClickPlus","Wrapper_styled","readOnly","_ref$group","GroupInfo_GroupInfo_styled","MonsterName_styled","name","MonsterDescription_component","Input_container","EncounterInfo","GroupInfo_GroupInfo_component","Title_styled_templateObject","SubTitle_styled_templateObject","Totals_styled_templateObject","injectIntl","intl","totalPlayerCount","totalExp","totalExpPerPlayer","round","adjustedExp","adjustedExpPerPlayer","formatMessage","Totals_styled","className","SubTitle_styled","LegentItem_styled_templateObject","Legend_styled_templateObject","hr","LEGEND_ITEMS","Legend","Legend_styled","legendType","LegentItem_styled","AddMonsterButton","e","stopPropagation","addMonsterToGroup","PAGE_SIZE_OPTIONS","CR_VALUES_STR","CR_VALUES_NUMB","numeric","SIZES","TYPES","CRFilter","minCR","maxCR","handleChangeMin","setState","handleChangeMax","style","width","SizeFilter","handleChange","TypeFilter","sortedTypes","type1","type2","translatedType1","translatedType2","getDangerZoneClass","monsterExp","threat","count","mediumExp","singleMultiplier","pairMultiplier","groupMultiplier","trivialMultiplier","pair","trivial","getThreat","MonstersTable","defaultFilterMethod","row","pivotId","String","toLowerCase","includes","CRFilterMethod","rowNumValue","_filter$value","typeRenderer","translatedType","charAt","toUpperCase","typeFilterMethod","handleTdProps","rowInfo","column","handleOriginal","showModal","MONSTER_INFO_MODAL_ID","original","columns","Header","accessor","Cell","AddMonsterButton_container","sortable","filterable","justifyContent","getProps","filterMethod","Filter","CRFilter_component","_ref4","_Filter","_x","_ref5","SizeFilter_component","minWidth","_Filter2","_x2","_ref6","TypeFilter_component","react_table_es","pageSizeOptions","defaultPageSize","resizable","previousText","nextText","loadingText","noDataText","pageText","ofText","rowsText","pageJumpText","rowsSelectorText","getTdProps","modalId","Wrapper_Wrapper_styled_templateObject","withComponent","NavLink","BattleButton_styled_templateObject","BattleButton","LoadingComponent","Wrapper_Wrapper_styled","disabled","BattleButton_styled","to","isMonsterLoading","EncounterBuilder","AlertBox","styled_flexboxgrid_es","xs","sm","md","GroupInfo_container","Divider","EncounterInfo_container","Totals_component","BattleButton_container","Legend_component","MonstersTable_container","compose","isLoading","getError","EncounterBuilder_container","reducerRegistry","register","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","react_router__WEBPACK_IMPORTED_MODULE_2__","history__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_5__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_6__","tiny_invariant__WEBPACK_IMPORTED_MODULE_7__","Link","_React$Component","_proto","handleClick","event","history","ex","preventDefault","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","replace","push","render","innerRef","rest","Consumer","context","location","href","createHref","ref","_ref$ariaCurrent","ariaCurrent","_ref$activeClassName","activeClassName","activeStyle","classNameProp","exact","isActiveProp","isActive","locationProp","strict","styleProp","path","pathname","escapedPath","pathToMatch","match","_len","classnames","_key","joinClassnames","aria-current"],"mappings":"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","file":"static/js/encounterBuilder.46e8a00a.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\n\nexport const bigBtnStyles = css`\n  font-size: 20px;\n  padding: 10px;\n`;\n\nexport default styled.button`\n  display: block;\n  font-size: 1em;\n  transition: all 0.1s ease;\n  cursor: pointer;\n  outline: none;\n  padding: ${props => props.theme.paddings.small};\n  border-radius: 4px;\n  border: 1px solid transparent;\n  box-shadow: 0 4px 8px 0 ${props => props.theme.colors.btn.shadow};\n  background: ${props => `linear-gradient(79deg, ${props.theme.colors.btn.prime1}, ${props.theme.colors.btn.prime2})`};\n  color: ${props => props.theme.colors.white};\n\n  &:hover {\n    opacity: 0.8;\n  }\n\n  &:active {\n    opacity: 0.8;\n  }\n\n  &:disabled {\n    opacity: 0.3;\n    cursor: text;\n  }\n`;\n","import styled from 'styled-components';\n\nexport default styled.select`\n  height: 34px;\n  border-radius: 4px;\n  background-color: ${props => props.theme.colors.white};\n  line-height: 34px;\n  padding: 0 15px;\n  border: 1px solid ${props => props.theme.colors.input.border};\n  outline: none;\n\n  &:focus {\n    border: solid 1px ${props => props.theme.colors.input.focusBorder};\n    box-shadow: 0 4px 16px 0 ${props => props.theme.colors.input.focusShadow};\n  }\n`;\n","import styled from 'styled-components';\n\nexport default styled.input`\n  height: 34px;\n  width: 100%;\n  border-radius: 4px;\n  background-color: ${props => props.theme.colors.white};\n  line-height: 34px;\n  padding: 0 15px;\n  border: 1px solid ${props => props.theme.colors.input.border};\n  outline: none;\n\n  &:focus {\n    box-shadow: 0 4px 16px 0 ${props => props.theme.colors.input.focusShadow};\n    border: solid 1px ${props => props.theme.colors.input.focusBorder};\n  }\n`;\n","// @flow\nexport { default as StyledButton, bigBtnStyles } from './Button.styled';\nexport { default as StyledSelect } from './Select.styled';\nexport { default as StyledInput } from './Input.styled';\n","// @flow\nimport type { EncounterBattleAction } from 'shared/types/encounterBattle';\nimport type { Monster, MonsterState } from 'shared/types/monsters';\n\nexport const ADD_MONSTER_TO_BATTLE_TABLE = 'encounterBattle/ADD_MONSTER_TO_BATTLE_TABLE';\nexport const SET_MONSTER_HP = 'encounterBattle/SET_MONSTER_HP';\nexport const SET_MONSTER_STATE = 'encounterBattle/SET_MONSTER_STATE';\nexport const NEXT_TURN = 'encounterBattle/NEXT_TURN';\n\nexport const addMonsterToBattleTable = (monster: Monster): EncounterBattleAction => ({\n  type: ADD_MONSTER_TO_BATTLE_TABLE, monster\n});\nexport const setMonsterHP = (rowID: string, hp: number): EncounterBattleAction => ({\n  type: SET_MONSTER_HP, rowID, hp\n});\n\nexport const setMonsterState = (rowID: string, state: MonsterState): EncounterBattleAction => ({\n  type: SET_MONSTER_STATE, rowID, state\n});\n\nexport const nextTurn = (): EncounterBattleAction => ({\n  type: NEXT_TURN\n});\n","import styled, { css } from 'styled-components';\n\nconst centerStyles = css`\n  text-align: center;\n`;\n\nexport default styled.h2`\n  margin: 0;\n  margin-bottom: ${props => props.theme.margins.medium};\n  font-size: ${props => props.theme.fontSize.title};\n  font-weight: normal;\n  line-height: 1;\n  ${props => (props.center && centerStyles)}\n`;\n","// @flow\nexport { default } from './Title.styled';\n","var rng = require('./lib/rng');\n\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nmodule.exports = bytesToUuid;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","// @flow\nimport v4 from 'uuid/v4';\nimport type { EncounterBattle } from 'shared/types/encounterBattle';\nimport type { Monster, BattleMonsterRow, BattleMonsterRows } from 'shared/types/monsters';\nimport type { Action } from 'shared/types';\nimport { SET_MONSTER_QTY } from 'pages/EncounterBuilder/EncounterBuilder.actions';\nimport { getInitiative } from './EncounterBattle.helpers';\nimport {\n  ADD_MONSTER_TO_BATTLE_TABLE, SET_MONSTER_HP, SET_MONSTER_STATE, NEXT_TURN\n} from './EncounterBattle.actions';\n\nconst modifyMonsterData = (monster: Monster): BattleMonsterRow => ({\n  rowID: v4(),\n  monster: {\n    ...monster,\n    initiative: getInitiative(monster.dexterity),\n    state: []\n  }\n});\n\nconst initialState: EncounterBattle = {\n  monsters: [],\n  turn: 0,\n  battleStarted: false\n};\n\nconst encounterBattleReducer = (\n  state: EncounterBattle = initialState, action: Action\n): EncounterBattle => {\n  switch (action.type) {\n    case ADD_MONSTER_TO_BATTLE_TABLE: {\n      const newMonstersState: BattleMonsterRows = [\n        ...state.monsters,\n        modifyMonsterData(action.monster)\n      ].sort((a, b) => b.monster.initiative - a.monster.initiative);\n\n      if (!state.monsters.length || !state.battleStarted) {\n        return {\n          ...state,\n          monsters: newMonstersState\n        };\n      }\n\n      const newTurn = newMonstersState.findIndex(d => d.rowID === state.monsters[state.turn].rowID);\n      return {\n        ...state,\n        monsters: newMonstersState,\n        turn: newTurn\n      };\n    }\n    case SET_MONSTER_QTY: {\n      if (!state.monsters.length) return state;\n\n      const { monster, qty } = action;\n\n      const monsters: BattleMonsterRows = state.monsters.filter(\n        data => data.monster.id === monster.id\n      );\n      if (!monsters.length) return state;\n\n      let newMonstersState: BattleMonsterRows;\n      if (qty > monsters.length) {\n        newMonstersState = [\n          ...state.monsters,\n          modifyMonsterData(monster)\n        ].sort((a, b) => b.monster.initiative - a.monster.initiative);\n      } else {\n        newMonstersState = [\n          ...state.monsters.slice(\n            0, state.monsters.findIndex(data => data.monster.id === monster.id)\n          ),\n          ...state.monsters.slice(\n            state.monsters.findIndex(data => data.monster.id === monster.id) + 1\n          )\n        ].sort((a, b) => b.monster.initiative - a.monster.initiative);\n      }\n\n      if (!state.battleStarted) {\n        return {\n          ...state,\n          monsters: newMonstersState\n        };\n      }\n\n      const newTurn = newMonstersState.findIndex(d => d.rowID === state.monsters[state.turn].rowID);\n      return {\n        ...state,\n        monsters: newMonstersState,\n        turn: newTurn !== -1 ? newTurn : state.turn\n      };\n    }\n    case SET_MONSTER_HP: {\n      const { rowID, hp } = action;\n\n      const monsterData = state.monsters.find(data => data.rowID === rowID);\n\n      if (monsterData) {\n        return {\n          ...state,\n          monsters: [\n            ...state.monsters.slice(0, state.monsters.findIndex(m => m.rowID === rowID)),\n            {\n              rowID,\n              monster: {\n                ...monsterData.monster,\n                hit_points: hp\n              }\n            },\n            ...state.monsters.slice(state.monsters.findIndex(m => m.rowID === rowID) + 1)\n          ]\n        };\n      }\n      return state;\n    }\n    case SET_MONSTER_STATE: {\n      const { rowID, state: monsterState } = action;\n\n      const monsterData = state.monsters.find(data => data.rowID === rowID);\n\n      if (monsterData) {\n        return {\n          ...state,\n          monsters: [\n            ...state.monsters.slice(0, state.monsters.findIndex(m => m.rowID === rowID)),\n            {\n              rowID,\n              monster: {\n                ...monsterData.monster,\n                state: monsterState\n              }\n            },\n            ...state.monsters.slice(state.monsters.findIndex(m => m.rowID === rowID) + 1)\n          ]\n        };\n      }\n      return state;\n    }\n    case NEXT_TURN:\n      return {\n        ...state,\n        turn: state.turn === state.monsters.length - 1 ? 0 : state.turn + 1,\n        battleStarted: true\n      };\n    default:\n      return state;\n  }\n};\n\nexport default encounterBattleReducer;\n","// @flow\nexport const getInitiative = (dex: number) => (\n  Math.floor((Math.floor(Math.random() * 20) + 1) + ((dex - 10) / 2))\n);\n","// @flow\nimport v4 from 'uuid/v4';\nimport type { PartyLevel, PartyLevels } from 'shared/types/encounterBuilder';\nimport { PLAYER_LEVELS } from 'shared/constants';\n\nexport const DEFAULT_PARTY_LEVELS: PartyLevels = [{\n  id: v4(),\n  level: PLAYER_LEVELS[1],\n  playerCount: 4\n}];\n\nexport const NEW_PARTY_LEVEL: { level: $PropertyType<PartyLevel, 'level'>, playerCount: $PropertyType<PartyLevel, 'playerCount'>} = {\n  level: PLAYER_LEVELS[1],\n  playerCount: 1\n};\n","// @flow\nimport v4 from 'uuid/v4';\nimport type { EncounterBuilder } from 'shared/types/encounterBuilder';\nimport type { Action } from 'shared/types';\nimport { PLAYER_LEVELS } from 'shared/constants';\nimport {\n  FETCH_ALL_MONSTERS, FETCH_ALL_MONSTERS_SUCCESS, FETCH_ALL_MONSTERS_ERROR,\n  FETCH_MONSTER_BY_ID, FETCH_MONSTER_BY_ID_SUCCESS, FETCH_MONSTER_BY_ID_ERROR,\n  ADD_PARTY_LEVEL, REMOVE_PARTY_LEVEL, SET_PARTY_LEVEL, SET_PARTY_PLAYER_COUNT,\n  ADD_MONSTER_TO_GROUP, ADD_MONSTER_TO_GROUP_SUCCESS, SET_MONSTER_QTY\n} from './EncounterBuilder.actions';\nimport { DEFAULT_PARTY_LEVELS, NEW_PARTY_LEVEL } from './EncounterBuilder.constants';\n\nconst initialState: EncounterBuilder = {\n  monsters: [],\n  loadedMonsters: [],\n  monsterLoading: false,\n  monsterError: null,\n  loading: false,\n  error: null,\n  partyLevels: DEFAULT_PARTY_LEVELS,\n  groups: []\n};\n\nconst encounterBuilderReducer = (\n  state: EncounterBuilder = initialState, action: Action\n): EncounterBuilder => {\n  switch (action.type) {\n    case FETCH_ALL_MONSTERS:\n      return {\n        ...state,\n        monsters: [],\n        loading: true,\n        error: null\n      };\n    case FETCH_ALL_MONSTERS_SUCCESS:\n      return {\n        ...state,\n        monsters: action.monsters,\n        loading: false,\n        error: null\n      };\n    case FETCH_ALL_MONSTERS_ERROR:\n      return {\n        ...state,\n        monsters: [],\n        loading: false,\n        error: action.error\n      };\n    case FETCH_MONSTER_BY_ID:\n    case ADD_MONSTER_TO_GROUP:\n      return {\n        ...state,\n        monsterLoading: true,\n        monsterError: null\n      };\n    case FETCH_MONSTER_BY_ID_SUCCESS:\n      return {\n        ...state,\n        loadedMonsters: [...state.loadedMonsters, action.monster],\n        monsterLoading: false,\n        monsterError: null\n      };\n    case FETCH_MONSTER_BY_ID_ERROR:\n      return {\n        ...state,\n        monsterLoading: false,\n        monsterError: action.error\n      };\n    case ADD_PARTY_LEVEL:\n      return {\n        ...state,\n        partyLevels: [\n          ...state.partyLevels,\n          {\n            id: v4(),\n            ...NEW_PARTY_LEVEL\n          }\n        ]\n      };\n    case REMOVE_PARTY_LEVEL: {\n      const { id } = action;\n      return {\n        ...state,\n        partyLevels: [\n          ...state.partyLevels.slice(0, state.partyLevels.findIndex(p => p.id === id)),\n          ...state.partyLevels.slice(state.partyLevels.findIndex(p => p.id === id) + 1)\n        ]\n      };\n    }\n    case SET_PARTY_LEVEL: {\n      const { id, value } = action;\n      return {\n        ...state,\n        partyLevels: [\n          ...state.partyLevels.slice(0, state.partyLevels.findIndex(p => p.id === id)),\n          {\n            id,\n            level: PLAYER_LEVELS[value],\n            playerCount: state.partyLevels[\n              state.partyLevels.findIndex(p => p.id === id)\n            ].playerCount\n          },\n          ...state.partyLevels.slice(state.partyLevels.findIndex(p => p.id === id) + 1)\n        ]\n      };\n    }\n    case SET_PARTY_PLAYER_COUNT: {\n      const { id, value } = action;\n      return {\n        ...state,\n        partyLevels: [\n          ...state.partyLevels.slice(0, state.partyLevels.findIndex(p => p.id === id)),\n          {\n            id,\n            level: state.partyLevels[\n              state.partyLevels.findIndex(p => p.id === id)\n            ].level,\n            playerCount: value\n          },\n          ...state.partyLevels.slice(state.partyLevels.findIndex(p => p.id === id) + 1)\n        ]\n      };\n    }\n    case ADD_MONSTER_TO_GROUP_SUCCESS: {\n      const { monsterID } = action;\n      const monsterIndexInGroup = state.groups.findIndex(g => g.monster.id === monsterID);\n      if (monsterIndexInGroup === -1) {\n        const monster = state.monsters.find(m => m.id === monsterID);\n        if (monster) {\n          return {\n            ...state,\n            groups: [\n              ...state.groups,\n              {\n                qty: 1,\n                monster\n              }\n            ],\n            monsterLoading: false\n          };\n        }\n        return { ...state, monsterLoading: false };\n      }\n      return {\n        ...state,\n        groups: [\n          ...state.groups.slice(0, monsterIndexInGroup),\n          {\n            ...state.groups[monsterIndexInGroup],\n            qty: state.groups[monsterIndexInGroup].qty + 1\n          },\n          ...state.groups.slice(monsterIndexInGroup + 1)\n        ],\n        monsterLoading: false\n      };\n    }\n    case SET_MONSTER_QTY: {\n      const { monster, qty } = action;\n      const monsterIndexInGroup = state.groups.findIndex(g => g.monster.id === monster.id);\n      if (qty === 0) {\n        return {\n          ...state,\n          groups: [\n            ...state.groups.slice(0, monsterIndexInGroup),\n            ...state.groups.slice(monsterIndexInGroup + 1)\n          ]\n        };\n      }\n      return {\n        ...state,\n        groups: [\n          ...state.groups.slice(0, monsterIndexInGroup),\n          {\n            ...state.groups[monsterIndexInGroup],\n            qty\n          },\n          ...state.groups.slice(monsterIndexInGroup + 1)\n        ]\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default encounterBuilderReducer;\n","// @flow\nimport type { State } from 'shared/types';\n\nexport const getBreakpoints = (state: State) => state.breakpoints;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getBreakpoints } from 'shared/components/BreakpointListener/BreakpointListener.selectors';\n\nconst mapStateToProps = state => ({\n  breakpoints: getBreakpoints(state)\n});\n\nexport default (WrappedComponent) => {\n  const wrappedComponent = props => <WrappedComponent {...props} />;\n  return connect(mapStateToProps)(wrappedComponent);\n};\n","import React, { Component } from 'react';\nimport sagaMiddleware from 'store/middleware/sagaMiddleware';\n\nconst withSaga = sagas => WrappedComponent => class extends Component {\n  componentWillMount() {\n    this.sagas = sagaMiddleware.run(sagas);\n  }\n\n  componentWillUnmount() {\n    this.sagas.cancel();\n  }\n\n  render() {\n    return <WrappedComponent {...this.props} />;\n  }\n};\n\nexport default withSaga;\n","// @flow\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport type { Saga } from 'redux-saga';\nimport type { MonstersRequestBase, MonsterRequest, Monster } from 'shared/types/monsters';\nimport { addMonsterToBattleTable } from 'pages/EncounterBattle/EncounterBattle.actions';\nimport {\n  FETCH_ALL_MONSTERS, fetchAllMonstersSuccess, fetchAllMonstersError,\n  FETCH_MONSTER_BY_ID, fetchMonsterByIDSuccess, fetchMonsterByIDError,\n  ADD_MONSTER_TO_GROUP, addMonsterToGroupSuccess\n} from './EncounterBuilder.actions';\n\nconst fetchAllMonsters = () => fetch('./data/monsters/monsters.json').then(res => res.json());\n\nexport function* getMonsters(): Saga<void> {\n  try {\n    const monsters: MonstersRequestBase = yield call(fetchAllMonsters);\n    yield put(fetchAllMonstersSuccess(monsters.map(({ slug, ...monster }) => ({\n      ...monster,\n      id: slug,\n      type: monster.type.startsWith('swarm') ? 'swarm' : monster.type\n    }))));\n  } catch (error) {\n    yield put(fetchAllMonstersError(error.message || error.response.statusText));\n  }\n}\n\nconst fetchMonsterByID = (monsterID: string) => fetch(`./data/monsters/${monsterID}.json`).then(res => res.json());\nexport function* getMonsterByID({ monsterID }: { monsterID: string }): Saga<void> {\n  try {\n    const reqMonster: MonsterRequest = yield call(fetchMonsterByID, monsterID);\n    const monster: Monster = {\n      ...reqMonster,\n      id: monsterID,\n      type: reqMonster.type.startsWith('swarm') ? 'swarm' : reqMonster.type\n    };\n    yield put(fetchMonsterByIDSuccess(monster));\n  } catch (error) {\n    yield put(fetchMonsterByIDError(error.message || error.response.statusText));\n  }\n}\n\nexport function* handleAddMonsterToGroup(\n  { monsterID, monster }: { monsterID: string, monster: ?Monster }\n): Saga<void> {\n  try {\n    if (monster) {\n      yield put(addMonsterToGroupSuccess(monsterID));\n      yield put(addMonsterToBattleTable(monster));\n    } else {\n      const reqMonster: MonsterRequest = yield call(fetchMonsterByID, monsterID);\n      const newMonster: Monster = {\n        ...reqMonster,\n        id: monsterID,\n        type: reqMonster.type.startsWith('swarm') ? 'swarm' : reqMonster.type\n      };\n      yield put(fetchMonsterByIDSuccess(newMonster));\n      yield put(addMonsterToGroupSuccess(monsterID));\n      yield put(addMonsterToBattleTable(newMonster));\n    }\n  } catch (error) {\n    yield put(fetchMonsterByIDError(error.message || error.response.statusText));\n  }\n}\n\nexport default function* (): Saga<void> {\n  yield takeEvery(FETCH_ALL_MONSTERS, getMonsters);\n  yield takeEvery(FETCH_MONSTER_BY_ID, getMonsterByID);\n  yield takeEvery(ADD_MONSTER_TO_GROUP, handleAddMonsterToGroup);\n}\n","// @flow\nimport React from 'react';\nimport type { EncounterBuilderAction } from 'shared/types/encounterBuilder';\nimport { StyledSelect } from 'shared/components/forms';\n\ntype Props = {\n  onChange: (value: number, id: string) => EncounterBuilderAction,\n  value: number,\n  maxValue: number,\n  id: string\n}\n\nclass Select extends React.PureComponent<Props> {\n  handleOnChange = ({ target: { value } }: SyntheticInputEvent<HTMLInputElement>) => {\n    const { onChange, id } = this.props;\n    onChange(Number(value), id);\n  }\n\n  render() {\n    const { value, maxValue } = this.props;\n    const arraySequence: number[] = Array.from(\n      new Array(maxValue), (val: number, index) => index + 1\n    );\n    return (\n      <StyledSelect onChange={this.handleOnChange} value={value}>\n        {arraySequence.map(val => <option key={val} value={val}>{val}</option>)}\n      </StyledSelect>\n    );\n  }\n}\n\nexport default Select;\n","import styled from 'styled-components';\n\nexport default styled.button`\n  display: block;\n  transition: all 0.1s ease;\n  cursor: pointer;\n  outline: none;\n  padding: ${props => props.theme.paddings.small};\n  border-radius: 4px;\n  border: 1px solid transparent;\n  box-shadow: 0 4px 8px 0 ${props => props.theme.colors.btn.shadow};\n  background: ${props => `linear-gradient(79deg, ${props.theme.colors.btn.prime1}, ${props.theme.colors.btn.prime2})`};\n  color: ${props => props.theme.colors.white};\n\n  &:hover {\n    opacity: 0.8;\n  }\n\n  &:active {\n    opacity: 0.8;\n  }\n\n  &:disabled {\n    opacity: 0.3;\n    cursor: text;\n  }\n`;\n","// @flow\nimport React from 'react';\nimport type { EncounterBuilderAction } from 'shared/types/encounterBuilder';\nimport { IconWrapper, RemoveIcon } from 'shared/components/Icons';\nimport StyledRemovePartyLevelButton from './RemovePartyLevelButton.styled';\n\ntype Props = {\n  removePartyLevel: (id: string) => EncounterBuilderAction,\n  id: string\n}\n\nclass RemovePartyLevelButton extends React.PureComponent<Props> {\n  handleOnClick = (): void => {\n    const { removePartyLevel, id } = this.props;\n    removePartyLevel(id);\n  }\n\n  render() {\n    return (\n      <StyledRemovePartyLevelButton type=\"button\" onClick={this.handleOnClick}>\n        <IconWrapper><RemoveIcon /></IconWrapper>\n      </StyledRemovePartyLevelButton>\n    );\n  }\n}\n\nexport default RemovePartyLevelButton;\n","import styled from 'styled-components';\nimport { StyledButton } from 'shared/components/forms';\n\nexport default styled(StyledButton)`\n  font-size: 12px;\n  margin-top: 10px;\n\n  & svg {\n    margin-right: ${props => props.theme.margins.small};\n  }\n`;\n","// @flow\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { IconWrapper, PlusIcon } from 'shared/components/Icons';\nimport StyledAddPartyLevelButton from './AddPartyLevelButton.styled';\n\nconst AddPartyLevelButton = (props: {}) => (\n  <StyledAddPartyLevelButton type=\"button\" {...props}>\n    <IconWrapper><PlusIcon size={12} /><FormattedMessage id=\"group-info.add-another-level\" /></IconWrapper>\n  </StyledAddPartyLevelButton>\n);\n\nexport default AddPartyLevelButton;\n","import styled from 'styled-components';\n\nexport const StyledPartyWrapper = styled.div`\n  display: table;\n  border-collapse: collapse;\n`;\n\nexport const StyledParty = styled.div`\n  display: table-row;\n\n  & + & {\n    border-top: 6px solid transparent;\n  }\n`;\n\nexport const StyledPartyItem = styled.div`\n  display: table-cell;\n\n  & + & {\n    border-left: 6px solid transparent;\n  }\n`;\n","// @flow\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport type { EncounterBuilderAction, PartyLevels } from 'shared/types/encounterBuilder';\nimport Select from './Select';\nimport RemovePartyLevelButton from './RemovePartyLevelButton';\nimport StyledAddPartyLevelButton from './AddPartyLevelButton';\nimport { MAX_PLAYER_COUNT, MAX_LEVEL } from './Party.constants';\nimport { StyledPartyWrapper, StyledParty, StyledPartyItem } from './Party.styled';\n\ntype Props = {\n  partyLevels: PartyLevels,\n  addPartyLevel: () => EncounterBuilderAction,\n  removePartyLevel: (id: string) => EncounterBuilderAction,\n  setPartyLevel: (value: number, id: string) => EncounterBuilderAction,\n  setPartyPlayerCount: (value: number, id: string) => EncounterBuilderAction\n}\n\nconst Party = ({\n  partyLevels, setPartyPlayerCount, setPartyLevel, removePartyLevel, addPartyLevel\n}: Props) => (\n  <>\n    <StyledPartyWrapper>\n      <StyledParty>\n        <StyledPartyItem><b><FormattedMessage id=\"group-info.players\" />:</b></StyledPartyItem>\n        <StyledPartyItem><b><FormattedMessage id=\"group-info.level\" />:</b></StyledPartyItem>\n      </StyledParty>\n      {partyLevels.map((partyLevel, index) => (\n        <StyledParty key={partyLevel.id}>\n          <StyledPartyItem>\n            <Select\n              onChange={setPartyPlayerCount}\n              value={partyLevel.playerCount}\n              maxValue={MAX_PLAYER_COUNT}\n              id={partyLevel.id}\n            />\n          </StyledPartyItem>\n          <StyledPartyItem>\n            <Select\n              onChange={setPartyLevel}\n              value={partyLevel.level.level}\n              maxValue={MAX_LEVEL}\n              id={partyLevel.id}\n            />\n          </StyledPartyItem>\n          {!!index && (\n            <StyledPartyItem>\n              <RemovePartyLevelButton\n                removePartyLevel={removePartyLevel}\n                id={partyLevel.id}\n              />\n            </StyledPartyItem>\n          )}\n        </StyledParty>\n      ))}\n    </StyledPartyWrapper>\n    <StyledAddPartyLevelButton onClick={addPartyLevel} />\n  </>\n);\n\nexport default Party;\n","// @flow\nexport const MAX_PLAYER_COUNT: number = 12;\nexport const MAX_LEVEL: number = 20;\n","// @flow\nimport type { PartyLevel, PartyLevels, Groups } from 'shared/types/encounterBuilder';\nimport { CR_INFO } from 'shared/constants';\n\ntype PartyLevelsType = {|\n  easy: number,\n  medium: number,\n  hard: number,\n  deadly: number,\n  budget: number,\n|}\nconst getExpLevels = (partyLevel: PartyLevel): PartyLevelsType => ({\n  easy: partyLevel.playerCount * partyLevel.level.easy,\n  medium: partyLevel.playerCount * partyLevel.level.medium,\n  hard: partyLevel.playerCount * partyLevel.level.hard,\n  deadly: partyLevel.playerCount * partyLevel.level.deadly,\n  budget: partyLevel.playerCount * partyLevel.level.budget\n});\n\nexport const getTotalPartyExpLevels = (partyLevels: PartyLevels): PartyLevelsType => {\n  const result = partyLevels.reduce((accum, curLevel) => {\n    const curExpLevels = getExpLevels(curLevel);\n\n    return {\n      easy: accum.easy + curExpLevels.easy,\n      medium: accum.medium + curExpLevels.medium,\n      hard: accum.hard + curExpLevels.hard,\n      deadly: accum.deadly + curExpLevels.deadly,\n      budget: accum.budget + curExpLevels.budget\n    };\n  }, {\n    easy: 0, medium: 0, hard: 0, deadly: 0, budget: 0\n  });\n  return result;\n};\n\nexport const getTotalExp = (groups: Groups): number => (\n  groups.reduce((acc, group) => acc + (CR_INFO[group.monster.challenge_rating].exp * group.qty), 0)\n);\n\nexport const getTotalQty = (groups: Groups): number => (\n  groups.reduce((acc, group) => acc + group.qty, 0)\n);\n\nexport const getTotalPlayerCount = (partyLevels: PartyLevels): number => (\n  partyLevels.reduce((acc, pl) => acc + pl.playerCount, 0)\n);\n\nconst getMultiplier = (playerCount, monsterCount): number => {\n  let multiplierCategory;\n\n  const multipliers = [0.5, 1, 1.5, 2, 2.5, 3, 4, 5];\n\n  if (monsterCount === 0) return 0;\n  if (monsterCount === 1) multiplierCategory = 1;\n  else if (monsterCount === 2) multiplierCategory = 2;\n  else if (monsterCount < 7) multiplierCategory = 3;\n  else if (monsterCount < 11) multiplierCategory = 4;\n  else if (monsterCount < 15) multiplierCategory = 5;\n  else multiplierCategory = 6;\n\n  if (playerCount < 3) {\n    // Increase multiplier for parties of one and two\n    multiplierCategory += 1;\n  } else if (playerCount > 5) {\n    // Decrease multiplier for parties of six through eight\n    multiplierCategory -= 1;\n  }\n\n  return multipliers[multiplierCategory];\n};\n\nexport const getAdjustedExp = (groups: Groups, partyLevels: PartyLevels): number => {\n  const qty = getTotalQty(groups);\n  const exp = getTotalExp(groups);\n  const totalPlayerCount = getTotalPlayerCount(partyLevels);\n  const multiplier = getMultiplier(totalPlayerCount, qty);\n\n  return Math.floor(exp * multiplier);\n};\n\nexport const getDifficulty = (groups: Groups, partyLevels: PartyLevels): string => {\n  const exp = getAdjustedExp(groups, partyLevels);\n  const levels = getTotalPartyExpLevels(partyLevels);\n\n  if (exp < (levels.easy)) return '';\n  if (exp < (levels.medium)) return 'easy';\n  if (exp < (levels.hard)) return 'medium';\n  if (exp < (levels.deadly)) return 'hard';\n  return 'deadly';\n};\n","// @flow\nexport const PARTY_LEVEL_TYPES: string[] = ['easy', 'medium', 'hard', 'deadly', 'budget'];\n","import styled from 'styled-components';\n\nexport default styled.li`\n  font-weight: ${props => (props.bold ? 'bold' : 'normal')};\n\n  &:last-child {\n    margin-top: ${props => props.theme.margins.medium};\n  }\n`;\n","import styled from 'styled-components';\n\nexport default styled.ul`\n  list-style: none;\n  margin: ${props => props.theme.margins.medium};\n  margin-right: 0;\n  padding: 0;\n  text-align: right;\n`;\n","// @flow\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport type { PartyLevels, Groups } from 'shared/types/encounterBuilder';\nimport { numberWithCommas } from 'shared/helpers';\nimport { getTotalPartyExpLevels, getDifficulty } from 'pages/EncounterBuilder/EncounterBuilder.helpers';\nimport { PARTY_LEVEL_TYPES } from './TotalPartyLevels.constants';\nimport StyledTotalPartyLevelItem from './TotalPartyLevelItem';\nimport StyledTotalPartyLevels from './TotalPartyLevels.styled';\n\ntype Props = {\n  partyLevels: PartyLevels,\n  groups: Groups\n}\n\nconst TotalPartyLevels = ({ partyLevels, groups }: Props) => {\n  const totalPartyExpLevels = getTotalPartyExpLevels(partyLevels);\n  const difficulty = getDifficulty(groups, partyLevels);\n\n  return (\n    <StyledTotalPartyLevels>\n      {PARTY_LEVEL_TYPES.map(type => (\n        <StyledTotalPartyLevelItem key={type} bold={type === difficulty}>\n          <FormattedMessage\n            id={`group-info.party-levels.${type}-exp`}\n            values={{ exp: numberWithCommas(totalPartyExpLevels[type]) }}\n          />\n        </StyledTotalPartyLevelItem>\n      ))}\n    </StyledTotalPartyLevels>\n  );\n};\n\nexport default TotalPartyLevels;\n","import styled from 'styled-components';\n\nexport default styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","// @flow\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport type { EncounterBuilderAction, PartyLevels, Groups } from 'shared/types/encounterBuilder';\nimport StyledTitle from 'shared/components/Title';\nimport Party from './Party';\nimport TotalPartyLevels from './TotalPartyLevels';\nimport StyledGroupInfo from './GroupInfo.styled';\n\ntype Props = {\n  partyLevels: PartyLevels,\n  groups: Groups,\n  addPartyLevel: () => EncounterBuilderAction,\n  removePartyLevel: (id: string) => EncounterBuilderAction,\n  setPartyLevel: (value: number, id: string) => EncounterBuilderAction,\n  setPartyPlayerCount: (value: number, id: string) => EncounterBuilderAction\n}\n\nclass GroupInfo extends React.PureComponent<Props> {\n  render() {\n    const {\n      partyLevels, groups, addPartyLevel,\n      removePartyLevel, setPartyLevel, setPartyPlayerCount\n    } = this.props;\n\n    return (\n      <StyledGroupInfo>\n        <div>\n          <StyledTitle><FormattedMessage id=\"group-info.title\" /></StyledTitle>\n          <Party\n            partyLevels={partyLevels}\n            addPartyLevel={addPartyLevel}\n            removePartyLevel={removePartyLevel}\n            setPartyLevel={setPartyLevel}\n            setPartyPlayerCount={setPartyPlayerCount}\n          />\n        </div>\n        <TotalPartyLevels partyLevels={partyLevels} groups={groups} />\n      </StyledGroupInfo>\n    );\n  }\n}\n\nexport default GroupInfo;\n","// @flow\nimport { connect } from 'react-redux';\nimport type { State, Dispatch } from 'shared/types';\nimport {\n  addPartyLevel, removePartyLevel, setPartyLevel, setPartyPlayerCount\n} from '../EncounterBuilder.actions';\nimport { getPartyLevels, getGroups } from '../EncounterBuilder.selectors';\nimport GroupInfo from './GroupInfo.component';\n\nconst mapStateToProps = (state: State) => ({\n  partyLevels: getPartyLevels(state),\n  groups: getGroups(state)\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  addPartyLevel: () => dispatch(addPartyLevel()),\n  removePartyLevel: (id: string) => dispatch(removePartyLevel(id)),\n  setPartyLevel: (value: number, id: string) => dispatch(setPartyLevel(value, id)),\n  setPartyPlayerCount: (value: number, id: string) => dispatch(setPartyPlayerCount(value, id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupInfo);\n","import styled from 'styled-components';\n\nexport default styled.div`\n  font-size: 30px;\n  font-weight: 300;\n`;\n","import styled from 'styled-components';\n\nexport default styled.div`\n  display: flex;\n  font-size: 16px;\n\n  & div + div {\n    margin-left: ${props => props.theme.margins.medium};\n  }\n`;\n","// @flow\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { numberWithCommas } from 'shared/helpers';\nimport StyledMonsterDescription from './MonsterDescription.styled';\n\ntype Props = {\n  cr: string,\n  xp: number\n}\n\nconst MonsterDescription = ({ cr, xp }: Props) => (\n  <StyledMonsterDescription>\n    <div><FormattedMessage id=\"encounter-info.cr\" values={{ cr }} /></div>\n    <div><FormattedMessage id=\"encounter-info.xp\" values={{ xp: numberWithCommas(xp) }} /></div>\n  </StyledMonsterDescription>\n);\n\nexport default MonsterDescription;\n","import styled from 'styled-components';\n\nexport default styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  & + & {\n    margin-top: ${props => props.theme.margins.large};\n  }\n\n  & > div + div {\n    margin-left: ${props => props.theme.margins.medium};\n  }\n`;\n","import styled from 'styled-components';\n\nexport default styled.div`\n  display: flex;\n  border: 1px solid ${props => props.theme.colors.input.border};\n  border-radius: 4px;\n`;\n","import styled, { css } from 'styled-components';\nimport { IconWrapper, IconUtils } from 'shared/components/Icons';\n\nconst leftBtnStyles = css`\n  border-right: 1px solid ${props => props.theme.colors.input.border};\n  border-radius: 4px 0 0 4px;\n`;\nconst rightBtnStyles = css`\n  border-left: 1px solid ${props => props.theme.colors.input.border};\n  border-radius: 0 4px 4px 0;\n`;\n\nexport default styled(IconWrapper)`\n  ${IconUtils.colorOverrideCss('#929292')}\n  padding: ${props => props.theme.paddings.medium};\n  background-color: #f3f3f3;\n  color: #929292;\n  cursor: pointer;\n  ${props => (props.left && leftBtnStyles)}\n  ${props => (props.right && rightBtnStyles)}\n`;\n","import styled from 'styled-components';\n\nexport default styled.input`\n  border: none;\n  border-radius: 0;\n  vertical-align: middle;\n  text-align: center;\n  width: 40px;\n\n  &:focus {\n    border: solid 1px ${props => props.theme.colors.input.focusBorder};\n    box-shadow: 0 4px 16px 0 ${props => props.theme.colors.input.focusShadow};\n  }\n`;\n","// @flow\nimport React from 'react';\nimport type { EncounterBuilderAction } from 'shared/types/encounterBuilder';\nimport type { Monster } from 'shared/types/monsters';\nimport { MinusIcon, PlusIcon } from 'shared/components/Icons';\nimport StyledWrapper from './Wrapper';\nimport StyledButton from './Button';\nimport StyledInput from './Input.styled';\n\ntype Props = {\n  monsterID: string,\n  qty: number,\n  getMonsterById: (monsterID: string) => ?Monster,\n  setMonsterQTY: (monster: Monster, qty: number) => EncounterBuilderAction\n}\n\nclass Input extends React.PureComponent<Props> {\n  handleOnClickMinus = () => {\n    const {\n      getMonsterById, setMonsterQTY, monsterID, qty\n    } = this.props;\n    const monster = getMonsterById(monsterID);\n    if (monster) setMonsterQTY(monster, qty - 1);\n  }\n\n  handleOnClickPlus = () => {\n    const {\n      getMonsterById, setMonsterQTY, monsterID, qty\n    } = this.props;\n    const monster = getMonsterById(monsterID);\n    if (monster) setMonsterQTY(monster, qty + 1);\n  }\n\n  render() {\n    const { qty: value } = this.props;\n\n    return (\n      <StyledWrapper>\n        <StyledButton left onClick={this.handleOnClickMinus}><MinusIcon size={12} /></StyledButton>\n        <StyledInput type=\"text\" value={value} readOnly />\n        <StyledButton right onClick={this.handleOnClickPlus}><PlusIcon size={12} /></StyledButton>\n      </StyledWrapper>\n    );\n  }\n}\n\nexport default Input;\n","// @flow\nimport { connect } from 'react-redux';\nimport type { State } from 'shared/types';\nimport { getMonsterByID } from 'pages/EncounterBuilder/EncounterBuilder.selectors';\nimport Input from './Input.component';\n\nconst mapStateToProps = (state: State) => ({\n  getMonsterById: (monsterID: string) => getMonsterByID(state, monsterID)\n});\n\nexport default connect(mapStateToProps)(Input);\n","// @flow\nimport React from 'react';\nimport type { EncounterBuilderAction, Group } from 'shared/types/encounterBuilder';\nimport type { Monster } from 'shared/types/monsters';\nimport { CR_INFO } from 'shared/constants';\nimport StyledMonsterName from './MonsterName';\nimport StyledMonsterDescription from './MonsterDescription';\nimport StyledGroupInfo from './GroupInfo.styled';\nimport Input from './Input';\n\ntype Props = {\n  group: Group,\n  setMonsterQTY: (monster: Monster, qty: number) => EncounterBuilderAction\n}\n\nconst GroupInfo = ({ group: { monster, qty }, setMonsterQTY }: Props) => (\n  <StyledGroupInfo>\n    <div>\n      <StyledMonsterName>{monster.name}</StyledMonsterName>\n      <StyledMonsterDescription\n        cr={monster.challenge_rating}\n        xp={CR_INFO[monster.challenge_rating].exp}\n      />\n    </div>\n    <div>\n      <Input\n        monsterID={monster.id}\n        setMonsterQTY={setMonsterQTY}\n        qty={qty}\n      />\n    </div>\n  </StyledGroupInfo>\n);\n\nexport default GroupInfo;\n","// @flow\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport type { EncounterBuilderAction, Groups } from 'shared/types/encounterBuilder';\nimport type { Monster } from 'shared/types/monsters';\nimport StyledTitle from 'shared/components/Title';\nimport GroupInfo from './GroupInfo';\n\ntype Props = {\n  groups: Groups,\n  setMonsterQTY: (monster: Monster, qty: number) => EncounterBuilderAction\n}\n\nconst EncounterInfo = ({ groups, setMonsterQTY }: Props) => (\n  <div>\n    <StyledTitle><FormattedMessage id=\"encounter-info.title\" /></StyledTitle>\n    {!groups.length ? <div><FormattedMessage id=\"encounter-info.empty-groups-message\" /></div>\n      : groups.map(group => (\n        <GroupInfo\n          key={group.monster.id}\n          group={group}\n          setMonsterQTY={setMonsterQTY}\n        />\n      ))\n    }\n  </div>\n);\n\nexport default EncounterInfo;\n","// @flow\nimport { connect } from 'react-redux';\nimport type { State, Dispatch } from 'shared/types';\nimport type { Monster } from 'shared/types/monsters';\nimport { setMonsterQTY } from '../EncounterBuilder.actions';\nimport { getGroups } from '../EncounterBuilder.selectors';\nimport EncounterInfo from './EncounterInfo.component';\n\nconst mapStateToProps = (state: State) => ({\n  groups: getGroups(state)\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  setMonsterQTY: (monster: Monster, qty: number) => dispatch(setMonsterQTY(monster, qty))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EncounterInfo);\n","import styled from 'styled-components';\n\nexport default styled.div`\n  font-size: 21px;\n`;\n","import styled from 'styled-components';\n\nexport default styled.div`\n  font-size: 14px;\n  font-style: italic;\n`;\n","import styled from 'styled-components';\n\nexport default styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  & div + div {\n    margin-left: ${props => props.theme.margins.medium};\n  }\n`;\n","// @flow\nimport React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport type { IntlShape } from 'react-intl';\nimport type { Groups, PartyLevels } from 'shared/types/encounterBuilder';\nimport {\n  getTotalExp, getAdjustedExp, getDifficulty, getTotalPlayerCount\n} from 'pages/EncounterBuilder/EncounterBuilder.helpers';\nimport StyledTitle from './Title';\nimport StyledSubTitle from './SubTitle';\nimport StyledTotals from './Totals.styled';\n\ntype Props = {\n  groups: Groups,\n  partyLevels: PartyLevels,\n  intl: IntlShape\n}\n\nconst Totals = ({ groups, partyLevels, intl }: Props) => {\n  const totalPlayerCount = getTotalPlayerCount(partyLevels);\n  const totalExp = getTotalExp(groups);\n  const totalExpPerPlayer = Math.round(totalExp / totalPlayerCount);\n  const adjustedExp = getAdjustedExp(groups, partyLevels);\n  const adjustedExpPerPlayer = Math.round(adjustedExp / totalPlayerCount);\n  const difficulty = getDifficulty(groups, partyLevels) ? intl.formatMessage({ id: `group-info.party-levels.${getDifficulty(groups, partyLevels)}` }) : '';\n\n  return (\n    <StyledTotals>\n      <StyledTitle>\n        <FormattedMessage id=\"encounter-info.difficulty\" values={{ difficulty }} />\n      </StyledTitle>\n      <div>\n        <StyledTitle className=\"text-right\">\n          <FormattedMessage id=\"encounter-info.total-xp\" values={{ exp: totalExp }} />\n        </StyledTitle>\n        <StyledSubTitle className=\"text-right\">\n          <FormattedMessage id=\"encounter-info.exp-per-player\" values={{ exp: totalExpPerPlayer }} />\n        </StyledSubTitle>\n        <StyledTitle className=\"text-right\">\n          <FormattedMessage id=\"encounter-info.adjusted-xp\" values={{ exp: adjustedExp }} />\n        </StyledTitle>\n        <StyledSubTitle className=\"text-right\">\n          <FormattedMessage id=\"encounter-info.exp-per-player\" values={{ exp: adjustedExpPerPlayer }} />\n        </StyledSubTitle>\n      </div>\n    </StyledTotals>\n  );\n};\n\nexport default injectIntl(Totals);\n","import styled from 'styled-components';\n\nexport default styled.li`\n  padding: ${props => props.theme.paddings.small};\n`;\n","import styled from 'styled-components';\n\nexport default styled.ul`\n  list-style: none;\n  margin: 0 0 ${props => props.theme.margins.medium} 0;\n  padding: 0;\n  border: 1px solid ${props => props.theme.colors.hr};\n`;\n","// @flow\nexport const LEGEND_ITEMS: string[] = ['trivial', 'group', 'pair', 'easy', 'medium', 'hard', 'deadly'];\n","// @flow\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport StyledTitle from 'shared/components/Title';\nimport StyledLegendItem from './LegendItem';\nimport StyledLegend from './Legend.styled';\nimport { LEGEND_ITEMS } from './Legend.constants';\n\nconst Legend = () => (\n  <div>\n    <StyledTitle><FormattedMessage id=\"legend.title\" /></StyledTitle>\n    <StyledLegend>\n      {LEGEND_ITEMS.map(legendType => (\n        <StyledLegendItem className={`legend-${legendType}`} key={legendType}>\n          <FormattedMessage id={`legend.${legendType}`} />\n        </StyledLegendItem>\n      ))}\n    </StyledLegend>\n  </div>\n);\n\nexport default Legend;\n","// @flow\nimport React from 'react';\nimport type { EncounterBuilderAction } from 'shared/types/encounterBuilder';\nimport type { Monster } from 'shared/types/monsters';\nimport { IconWrapper, PlusIcon } from 'shared/components/Icons';\nimport { StyledButton } from 'shared/components/forms';\n\ntype Props = {\n  monsterID: string,\n  getMonsterById: (monsterID: string) => ?Monster,\n  addMonsterToGroup: (monsterID: string, monster: ?Monster) => EncounterBuilderAction\n}\n\nclass AddMonsterButton extends React.PureComponent<Props> {\n  handleOnClick = (e: SyntheticEvent<HTMLButtonElement>) => {\n    e.stopPropagation();\n    const { addMonsterToGroup, getMonsterById, monsterID } = this.props;\n    addMonsterToGroup(monsterID, getMonsterById(monsterID));\n  }\n\n  render() {\n    return (\n      <StyledButton type=\"button\" onClick={this.handleOnClick}>\n        <IconWrapper><PlusIcon /></IconWrapper>\n      </StyledButton>\n    );\n  }\n}\n\nexport default AddMonsterButton;\n","// @flow\nimport { connect } from 'react-redux';\nimport type { State, Dispatch } from 'shared/types';\nimport type { Monster } from 'shared/types/monsters';\nimport { addMonsterToGroup } from 'pages/EncounterBuilder/EncounterBuilder.actions';\nimport { getMonsterByID } from 'pages/EncounterBuilder/EncounterBuilder.selectors';\nimport AddMonsterButton from './AddMonsterButton.component';\n\nconst mapStateToProps = (state: State) => ({\n  getMonsterById: (monsterID: string) => getMonsterByID(state, monsterID)\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  addMonsterToGroup: (\n    monsterID: string, monster: ?Monster\n  ) => dispatch(addMonsterToGroup(monsterID, monster))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMonsterButton);\n","// @flow\nimport { CR_INFO } from 'shared/constants';\n\nexport const DEFAULT_PAGE_SIZE: number = 10;\nexport const PAGE_SIZE_OPTIONS: number[] = [10, 25, 50, 100, 250, 500, 1000];\nexport const CR_VALUES_STR: string[] = ['0', '1/8', '1/4', '1/2', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30'];\nexport const CR_VALUES_NUMB: number[] = CR_VALUES_STR.map(cr => CR_INFO[cr].numeric);\nexport const SIZES: string[] = ['Tiny', 'Small', 'Medium', 'Large', 'Huge', 'Gargantuan'];\nexport const TYPES: string[] = ['aberration', 'beast', 'celestial', 'construct', 'dragon', 'elemental', 'fey', 'fiend', 'giant', 'humanoid', 'monstrosity', 'ooze', 'plant', 'undead', 'swarm', 'titan'];\n","// @flow\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport type { IntlShape } from 'react-intl';\nimport { CR_VALUES_STR, CR_VALUES_NUMB } from '../MonstersTable.constants';\n\ntype Props = {\n  onChange: (value: any) => void,\n  intl: IntlShape\n}\ntype State = {\n  minCR: string,\n  maxCR: string\n}\n\nclass CRFilter extends React.PureComponent<Props, State> {\n  state = {\n    minCR: '',\n    maxCR: ''\n  }\n\n  handleChangeMin = ({ target: { value } }: SyntheticInputEvent<HTMLInputElement>): void => {\n    this.setState({ minCR: value });\n    this.props.onChange({\n      minCR: value,\n      maxCR: this.state.maxCR\n    });\n  }\n\n  handleChangeMax = ({ target: { value } }: SyntheticInputEvent<HTMLInputElement>): void => {\n    this.setState({ maxCR: value });\n    this.props.onChange({\n      minCR: this.state.minCR,\n      maxCR: value\n    });\n  }\n\n  render() {\n    const { intl: { formatMessage } } = this.props;\n\n    return (\n      <div>\n        <select\n          onChange={this.handleChangeMin}\n          value={this.state.minCR}\n          style={{ width: '50%' }}\n        >\n          <option value=\"\">{formatMessage({ id: 'table-labels.min' })}</option>\n          {CR_VALUES_NUMB.map((cr, index) => (\n            <option value={cr} key={cr}>{CR_VALUES_STR[index]}</option>\n          ))}\n        </select>\n        <select\n          onChange={this.handleChangeMax}\n          value={this.state.maxCR}\n          style={{ width: '50%' }}\n        >\n          <option value=\"\">{formatMessage({ id: 'table-labels.max' })}</option>\n          {CR_VALUES_NUMB.map((cr, index) => (\n            <option value={cr} key={cr}>{CR_VALUES_STR[index]}</option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(CRFilter);\n","// @flow\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport type { IntlShape } from 'react-intl';\nimport { SIZES } from '../MonstersTable.constants';\n\ntype Props = {\n  onChange: (value: any) => void,\n  value: string,\n  intl: IntlShape\n}\n\nclass SizeFilter extends React.PureComponent<Props> {\n  handleChange = ({ target: { value } }: SyntheticInputEvent<HTMLInputElement>): void => {\n    this.props.onChange(value);\n  }\n\n  render() {\n    const { value, intl: { formatMessage } } = this.props;\n\n    return (\n      <select\n        onChange={this.handleChange}\n        value={value}\n      >\n        <option value=\"\">{formatMessage({ id: 'table-labels.Any' })}</option>\n        {SIZES.map(size => (\n          <option value={size} key={size}>{formatMessage({ id: `monster.sizes.${size}` })}</option>\n        ))}\n      </select>\n    );\n  }\n}\n\nexport default injectIntl(SizeFilter);\n","// @flow\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport type { IntlShape } from 'react-intl';\nimport { TYPES } from '../MonstersTable.constants';\n\ntype Props = {\n  onChange: (value: any) => void,\n  value: string,\n  intl: IntlShape\n}\n\nclass TypeFilter extends React.PureComponent<Props> {\n  handleChange = ({ target: { value } }: SyntheticInputEvent<HTMLInputElement>): void => {\n    this.props.onChange(value);\n  }\n\n  render() {\n    const { value, intl: { formatMessage } } = this.props;\n\n    const sortedTypes = TYPES.sort((type1, type2) => {\n      const translatedType1 = formatMessage({ id: `monster.types.${type1}` });\n      const translatedType2 = formatMessage({ id: `monster.types.${type2}` });\n      if (translatedType1 < translatedType2) return -1;\n      if (translatedType1 > translatedType2) return 1;\n      return 0;\n    });\n\n    return (\n      <select\n        onChange={this.handleChange}\n        value={value}\n      >\n        <option value=\"\">{formatMessage({ id: 'table-labels.Any' })}</option>\n        {sortedTypes.map(type => (\n          <option value={type} key={type}>{formatMessage({ id: `monster.types.${type}` })}</option>\n        ))}\n      </select>\n    );\n  }\n}\n\nexport default injectIntl(TypeFilter);\n","// @flow\nimport type { PartyLevels } from 'shared/types/encounterBuilder';\nimport { getTotalPlayerCount, getTotalPartyExpLevels } from 'pages/EncounterBuilder/EncounterBuilder.helpers';\n\nexport const getThreat = (partyLevels: PartyLevels) => {\n  const count = getTotalPlayerCount(partyLevels);\n  const levels = getTotalPartyExpLevels(partyLevels);\n  const mediumExp = levels.medium;\n  let singleMultiplier = 1;\n  let pairMultiplier = 1.5;\n  let groupMultiplier = 2;\n  let trivialMultiplier = 2.5;\n\n  if (count < 3) {\n    // For small groups, increase multiplier\n    singleMultiplier = 1.5;\n    pairMultiplier = 2;\n    groupMultiplier = 2.5;\n    trivialMultiplier = 3;\n  } else if (count > 5) {\n    // For large groups, reduce multiplier\n    singleMultiplier = 0.5;\n    pairMultiplier = 1;\n    groupMultiplier = 1.5;\n    trivialMultiplier = 2;\n  }\n\n  return {\n    deadly: levels.deadly / singleMultiplier,\n    hard: levels.hard / singleMultiplier,\n    medium: mediumExp / singleMultiplier,\n    easy: levels.easy / singleMultiplier,\n    pair: mediumExp / (2 * pairMultiplier),\n    group: mediumExp / (4 * groupMultiplier),\n    trivial: mediumExp / (8 * trivialMultiplier)\n  };\n};\n\nexport const getDangerZoneClass = (partyLevels: PartyLevels, monsterExp: number): string => {\n  const threat = getThreat(partyLevels);\n\n  if (monsterExp > threat.deadly) return 'legend-deadly';\n  if (monsterExp > threat.hard) return 'legend-hard';\n  if (monsterExp > threat.medium) return 'legend-medium';\n  if (monsterExp > threat.easy) return 'legend-easy';\n  if (monsterExp > threat.pair) return 'legend-pair';\n  if (monsterExp > threat.group) return 'legend-group';\n  return 'trivial';\n};\n","// @flow\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport type { IntlShape } from 'react-intl';\nimport ReactTable from 'react-table';\nimport type { PartyLevels } from 'shared/types/encounterBuilder';\nimport type { MonstersBase } from 'shared/types/monsters';\nimport type { ModalsAction } from 'shared/types/modals';\nimport { CR_INFO } from 'shared/constants';\nimport { MONSTER_INFO_MODAL_ID } from 'shared/components/MonsterInfoModal/MonsterInfoModal.constants';\nimport AddMonsterButton from './AddMonsterButton';\nimport CRFilter from './CRFilter';\nimport SizeFilter from './SizeFilter';\nimport TypeFilter from './TypeFilter';\nimport { getDangerZoneClass } from './MonstersTable.helpers';\nimport { DEFAULT_PAGE_SIZE, PAGE_SIZE_OPTIONS } from './MonstersTable.constants';\n\ntype Props = {\n  monsters: MonstersBase,\n  partyLevels: PartyLevels,\n  showModal: (modalId: string, data: { monsterID: string }) => ModalsAction,\n  intl: IntlShape\n}\ntype Filter = {\n  id: string,\n  value: any,\n  pivotId?: string\n}\n\nclass MonstersTable extends React.PureComponent<Props> {\n  defaultFilterMethod = (filter: Filter, row: any): boolean => {\n    const id = filter.pivotId || filter.id;\n    if (row[id] !== undefined) {\n      return String(row[id].toLowerCase()).includes(filter.value.toLowerCase());\n    }\n    return true;\n  }\n\n  CRFilterMethod = (filter: Filter, row: any): boolean => {\n    const rowNumValue = CR_INFO[row[filter.id]].numeric;\n    const { value: { minCR, maxCR } } = filter;\n\n    if (!minCR && !maxCR) return true;\n    if (minCR && maxCR && +maxCR >= +minCR) {\n      return rowNumValue >= +minCR && rowNumValue <= +maxCR;\n    }\n    if (minCR && !maxCR) {\n      return rowNumValue >= +minCR;\n    }\n    if (!minCR && maxCR) {\n      return rowNumValue <= +maxCR;\n    }\n    return true;\n  }\n\n  typeRenderer = ({ value }: { value: string }): React$Element<'span'> => {\n    const { intl: { formatMessage } } = this.props;\n    const translatedType: string = formatMessage({ id: `monster.types.${value}` });\n    const type: string = translatedType.charAt(0).toUpperCase() + translatedType.slice(1);\n    return <span>{type}</span>;\n  }\n\n  typeFilterMethod = (filter: Filter, row: any): boolean => {\n    const id = filter.pivotId || filter.id;\n    return row[id] !== undefined ? String(row[id]).startsWith(filter.value) : true;\n  }\n\n  handleTdProps = (state: any, rowInfo: any, column: any): {} => ({\n    onClick: (e, handleOriginal) => {\n      if (column.id !== 'id') {\n        this.props.showModal(MONSTER_INFO_MODAL_ID, { monsterID: rowInfo.original.id });\n      }\n      if (handleOriginal) handleOriginal();\n    }\n  })\n\n  render() {\n    const { monsters, partyLevels, intl: { formatMessage } } = this.props;\n\n    const columns = [{\n      Header: '',\n      accessor: 'id',\n      width: 50,\n      Cell: ({ value }: { value: string }) => <AddMonsterButton monsterID={value} />,\n      sortable: false,\n      filterable: false,\n      style: { justifyContent: 'center' }\n    }, {\n      Header: formatMessage({ id: 'monster.name' }),\n      accessor: 'name'\n    }, {\n      Header: formatMessage({ id: 'monster.cr' }),\n      accessor: 'challenge_rating',\n      getProps: (state: any, rowInfo: any) => {\n        if (!rowInfo) return {};\n        return {\n          className: getDangerZoneClass(partyLevels, CR_INFO[rowInfo.original.challenge_rating].exp)\n        };\n      },\n      width: 190,\n      style: { justifyContent: 'center' },\n      filterMethod: this.CRFilterMethod,\n      Filter: ({ onChange }: { onChange: (value: any) => void }) => <CRFilter onChange={onChange} />\n    }, {\n      Header: formatMessage({ id: 'monster.size' }),\n      accessor: 'size',\n      width: 140,\n      Cell: ({ value }: { value: string }) => formatMessage({ id: `monster.sizes.${value}` }),\n      Filter: ({ filter, onChange }: { filter: Filter, onChange: (value: string) => void }) => (\n        <SizeFilter onChange={onChange} value={filter ? filter.value : ''} />\n      )\n    }, {\n      Header: formatMessage({ id: 'monster.type' }),\n      accessor: 'type',\n      minWidth: 130,\n      Cell: this.typeRenderer,\n      Filter: ({ filter, onChange }: { filter: Filter, onChange: (value: string) => void }) => (\n        <TypeFilter onChange={onChange} value={filter ? filter.value : ''} />\n      ),\n      filterMethod: this.typeFilterMethod\n    }];\n\n    return (\n      <ReactTable\n        data={monsters}\n        columns={columns}\n        pageSizeOptions={PAGE_SIZE_OPTIONS}\n        defaultPageSize={DEFAULT_PAGE_SIZE}\n        resizable={false}\n        filterable\n        previousText={formatMessage({ id: 'table-labels.previousText' })}\n        nextText={formatMessage({ id: 'table-labels.nextText' })}\n        loadingText={formatMessage({ id: 'table-labels.loadingText' })}\n        noDataText={formatMessage({ id: 'table-labels.noDataText' })}\n        pageText={formatMessage({ id: 'table-labels.pageText' })}\n        ofText={formatMessage({ id: 'table-labels.ofText' })}\n        rowsText={formatMessage({ id: 'table-labels.rowsText' })}\n        pageJumpText={formatMessage({ id: 'table-labels.pageJumpText' })}\n        rowsSelectorText={formatMessage({ id: 'table-labels.rowsSelectorText' })}\n        defaultFilterMethod={this.defaultFilterMethod}\n        getTdProps={this.handleTdProps}\n        className=\"-highlight\"\n      />\n    );\n  }\n}\n\nexport default injectIntl(MonstersTable);\n","// @flow\nimport { connect } from 'react-redux';\nimport type { Dispatch } from 'shared/types';\nimport { showModal } from 'shared/components/Modal/Modal.actions';\nimport MonstersTable from './MonstersTable.component';\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  showModal: (modalId: string, data: { monsterID: string }) => dispatch(showModal(modalId, data))\n});\n\nexport default connect(null, mapDispatchToProps)(MonstersTable);\n","import styled from 'styled-components';\n\nexport default styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: ${props => props.theme.margins.medium};\n`;\n","import styled from 'styled-components';\nimport { StyledButton, bigBtnStyles } from 'shared/components/forms';\nimport { NavLink } from 'react-router-dom';\n\nexport default styled(StyledButton.withComponent(NavLink))` ${bigBtnStyles} `;\n","// @flow\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport LoadingComponent from 'shared/components/LoadingComponent';\nimport StyledWrapper from './Wrapper';\nimport StyledBattleButton from './BattleButton.styled';\n\ntype Props = {\n  monsterLoading: boolean\n}\n\nconst BattleButton = ({ monsterLoading }: Props) => {\n  if (monsterLoading) return <LoadingComponent />;\n  return (\n    <StyledWrapper disabled>\n      <StyledBattleButton to=\"/encounter-battle\">\n        <FormattedMessage id=\"encounter-info.battle-btn\" />\n      </StyledBattleButton>\n    </StyledWrapper>\n  );\n};\n\nexport default BattleButton;\n","// @flow\nimport { connect } from 'react-redux';\nimport type { State } from 'shared/types';\nimport { isMonsterLoading } from 'pages/EncounterBuilder/EncounterBuilder.selectors';\nimport BattleButton from './BattleButton.component';\n\nconst mapStateToProps = (state: State) => ({\n  monsterLoading: isMonsterLoading(state)\n});\n\nexport default connect(mapStateToProps)(BattleButton);\n","// @flow\nimport React from 'react';\nimport { Col, Row } from 'react-styled-flexboxgrid';\nimport type { ErrorType } from 'shared/types';\nimport type { Breakpoints } from 'shared/types/breakpoints';\nimport type { EncounterBuilderAction, Groups, PartyLevels } from 'shared/types/encounterBuilder';\nimport type { MonstersBase } from 'shared/types/monsters';\nimport LoadingComponent from 'shared/components/LoadingComponent';\nimport AlertBox from 'shared/components/AlertBox';\nimport Divider from 'shared/components/Divider';\nimport GroupInfo from './GroupInfo';\nimport EncounterInfo from './EncounterInfo';\nimport Totals from './Totals';\nimport Legend from './Legend';\nimport MonstersTable from './MonstersTable';\nimport BattleButton from './BattleButton';\n\ntype Props = {\n  monsters: MonstersBase,\n  loading: boolean,\n  error: ErrorType,\n  groups: Groups,\n  partyLevels: PartyLevels,\n  breakpoints: Breakpoints,\n  fetchAllMonsters: () => EncounterBuilderAction\n}\n\nclass EncounterBuilder extends React.PureComponent<Props> {\n  componentDidMount() {\n    if (!this.props.monsters.length) this.props.fetchAllMonsters();\n  }\n\n  render() {\n    const {\n      monsters, loading, error, groups, partyLevels, breakpoints\n    } = this.props;\n\n    if (loading) return <LoadingComponent />;\n    if (error) return <AlertBox>{error}</AlertBox>;\n\n    return (\n      <Row>\n        <Col xs={12} sm={12} md={4}>\n          <Row>\n            <Col xs={12}>\n              <GroupInfo />\n            </Col>\n          </Row>\n          <Divider />\n          <Row>\n            <Col xs={12}>\n              <EncounterInfo />\n            </Col>\n          </Row>\n          {!!groups.length && (\n            <>\n              <Divider />\n              <Row>\n                <Col xs={12}>\n                  <Totals groups={groups} partyLevels={partyLevels} />\n                  <BattleButton />\n                </Col>\n              </Row>\n            </>\n          )}\n          {(breakpoints.xs || (breakpoints.sm && !breakpoints.md)) && <Divider />}\n          {breakpoints.md && (\n            <>\n              <Divider />\n              <Row>\n                <Col xs={12}>\n                  <Legend />\n                </Col>\n              </Row>\n            </>\n          )}\n        </Col>\n        <Col xs={12} sm={12} md={8}>\n          <Row>\n            <Col xs={12}>\n              <MonstersTable\n                monsters={monsters}\n                partyLevels={partyLevels}\n              />\n              {(breakpoints.xs || (breakpoints.sm && !breakpoints.md)) && (\n                <>\n                  <Divider />\n                  <Row>\n                    <Col xs={12}>\n                      <Legend />\n                    </Col>\n                  </Row>\n                </>\n              )}\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default EncounterBuilder;\n","// @flow\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport type { State, Dispatch } from 'shared/types';\nimport withBreakpoints from 'shared/HOC/withBreakpoints';\nimport withSaga from 'shared/HOC/withSaga';\nimport sagas from './EncounterBuilder.sagas';\nimport { fetchAllMonsters } from './EncounterBuilder.actions';\nimport {\n  getMonsters, isLoading, getError, getGroups, getPartyLevels\n} from './EncounterBuilder.selectors';\nimport EncounterBuilder from './EncounterBuilder.component';\n\nconst mapStateToProps = (state: State) => ({\n  monsters: getMonsters(state),\n  loading: isLoading(state),\n  error: getError(state),\n  groups: getGroups(state),\n  partyLevels: getPartyLevels(state)\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchAllMonsters: () => dispatch(fetchAllMonsters())\n});\n\nexport default compose(\n  withBreakpoints,\n  withSaga(sagas),\n  connect(mapStateToProps, mapDispatchToProps)\n)(EncounterBuilder);\n","// @flow\nimport reducerRegistry from 'store/reducerRegistry';\nimport encounterBattleReducer from '../EncounterBattle/EncounterBattle.reducer';\nimport encounterBuilderReducer from './EncounterBuilder.reducer';\n\nreducerRegistry.register('encounterBattle', encounterBattleReducer);\nreducerRegistry.register('encounterBuilder', encounterBuilderReducer);\n\nexport { default } from './EncounterBuilder.container';\n","import _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport React from 'react';\nimport { Router, __RouterContext, matchPath } from 'react-router';\nexport * from 'react-router';\nimport { createBrowserHistory, createHashHistory, createLocation } from 'history';\nimport PropTypes from 'prop-types';\nimport warning from 'tiny-warning';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport invariant from 'tiny-invariant';\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\n\nvar BrowserRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(BrowserRouter, _React$Component);\n\n  function BrowserRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = createBrowserHistory(_this.props);\n    return _this;\n  }\n\n  var _proto = BrowserRouter.prototype;\n\n  _proto.render = function render() {\n    return React.createElement(Router, {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return BrowserRouter;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!this.props.history, \"<BrowserRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\") : void 0;\n  };\n}\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\n\n\nvar HashRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(HashRouter, _React$Component);\n\n  function HashRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = createHashHistory(_this.props);\n    return _this;\n  }\n\n  var _proto = HashRouter.prototype;\n\n  _proto.render = function render() {\n    return React.createElement(Router, {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return HashRouter;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!this.props.history, \"<HashRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { HashRouter as Router }`.\") : void 0;\n  };\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n/**\n * The public API for rendering a history-aware <a>.\n */\n\n\nvar Link =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Link, _React$Component);\n\n  function Link() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Link.prototype;\n\n  _proto.handleClick = function handleClick(event, history) {\n    try {\n      if (this.props.onClick) this.props.onClick(event);\n    } catch (ex) {\n      event.preventDefault();\n      throw ex;\n    }\n\n    if (!event.defaultPrevented && // onClick prevented default\n    event.button === 0 && ( // ignore everything but left clicks\n    !this.props.target || this.props.target === \"_self\") && // let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // ignore clicks with modifier keys\n    ) {\n        event.preventDefault();\n        var method = this.props.replace ? history.replace : history.push;\n        method(this.props.to);\n      }\n  };\n\n  _proto.render = function render() {\n    var _this = this;\n\n    var _this$props = this.props,\n        innerRef = _this$props.innerRef,\n        replace = _this$props.replace,\n        to = _this$props.to,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"innerRef\", \"replace\", \"to\"]); // eslint-disable-line no-unused-vars\n\n\n    return React.createElement(__RouterContext.Consumer, null, function (context) {\n      !context ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You should not use <Link> outside a <Router>\") : invariant(false) : void 0;\n      var location = typeof to === \"string\" ? createLocation(to, null, null, context.location) : to;\n      var href = location ? context.history.createHref(location) : \"\";\n      return React.createElement(\"a\", _extends({}, rest, {\n        onClick: function onClick(event) {\n          return _this.handleClick(event, context.history);\n        },\n        href: href,\n        ref: innerRef\n      }));\n    });\n  };\n\n  return Link;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  var toType = PropTypes.oneOfType([PropTypes.string, PropTypes.object]);\n  var innerRefType = PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]);\n  Link.propTypes = {\n    innerRef: innerRefType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nfunction joinClassnames() {\n  for (var _len = arguments.length, classnames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classnames[_key] = arguments[_key];\n  }\n\n  return classnames.filter(function (i) {\n    return i;\n  }).join(\" \");\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nfunction NavLink(_ref) {\n  var _ref$ariaCurrent = _ref[\"aria-current\"],\n      ariaCurrent = _ref$ariaCurrent === void 0 ? \"page\" : _ref$ariaCurrent,\n      _ref$activeClassName = _ref.activeClassName,\n      activeClassName = _ref$activeClassName === void 0 ? \"active\" : _ref$activeClassName,\n      activeStyle = _ref.activeStyle,\n      classNameProp = _ref.className,\n      exact = _ref.exact,\n      isActiveProp = _ref.isActive,\n      locationProp = _ref.location,\n      strict = _ref.strict,\n      styleProp = _ref.style,\n      to = _ref.to,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"aria-current\", \"activeClassName\", \"activeStyle\", \"className\", \"exact\", \"isActive\", \"location\", \"strict\", \"style\", \"to\"]);\n\n  var path = typeof to === \"object\" ? to.pathname : to; // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n\n  var escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n  return React.createElement(__RouterContext.Consumer, null, function (context) {\n    !context ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You should not use <NavLink> outside a <Router>\") : invariant(false) : void 0;\n    var pathToMatch = locationProp ? locationProp.pathname : context.location.pathname;\n    var match = escapedPath ? matchPath(pathToMatch, {\n      path: escapedPath,\n      exact: exact,\n      strict: strict\n    }) : null;\n    var isActive = !!(isActiveProp ? isActiveProp(match, context.location) : match);\n    var className = isActive ? joinClassnames(classNameProp, activeClassName) : classNameProp;\n    var style = isActive ? _extends({}, styleProp, activeStyle) : styleProp;\n    return React.createElement(Link, _extends({\n      \"aria-current\": isActive && ariaCurrent || null,\n      className: className,\n      style: style,\n      to: to\n    }, rest));\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  var ariaCurrentType = PropTypes.oneOf([\"page\", \"step\", \"location\", \"date\", \"time\", \"true\"]);\n  NavLink.propTypes = _extends({}, Link.propTypes, {\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.string,\n    exact: PropTypes.bool,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    strict: PropTypes.bool,\n    style: PropTypes.object\n  });\n}\n\nexport { BrowserRouter, HashRouter, Link, NavLink };"],"sourceRoot":""}